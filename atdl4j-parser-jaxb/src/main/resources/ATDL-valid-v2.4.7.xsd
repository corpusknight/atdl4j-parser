<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.fixprotocol.org/working_groups/algowg/documents/ATDL-valid-v2.4.7.xsd" targetNamespace="http://www.fixprotocol.org/working_groups/algowg/documents/ATDL-valid-v2.4.7.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!-- Internal Name: ATDL-valid -->
	<!-- Please email any revisions to the Steward of the Master Model & Mapping artifacts at algotech@fixprotocol.org-->
	<!-- Please note - Revision history is at the end of this xsd -->
	<!-- 
Validation Sub-Schema
In order to validate the parameter values entered by the user the following sub-schema has been provided. It enables the creation of complex and conditional validation rules that can be applied to the algorithmic orders generated by an OMS.
-->
	<xs:element name="strategyEdit">
		<xs:annotation>
			<xs:documentation>Specifies a strategy-wide boolean expression across more than one field.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:element ref="edit"/>
				<xs:element name="editRef" type="editRef_t"/>
			</xs:choice>
			<xs:attribute name="errorMessage" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="edit">
		<xs:annotation>
			<xs:documentation>specifies an edit for a field in the strategy</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="edit" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="editRef" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="field" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Field name for comparison. Must exist in the strategy XML</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="field2" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Field name for comparison. Must exist in the strategy XML</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="value" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Value for comparison when using an operator. "field2" and "value" are mutually exclusive.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="operator" type="operator_t" use="optional">
				<xs:annotation>
					<xs:documentation>One of the following enumerated types:
EX (Exists or supplied by user), NX (Does not exist or was not supplied), EQ (Equal), LT (Less than), GT (Greater than), NE (Not equal), LE (Less than equal), GE (Greater than equal). Mutually exclusive with logicOperator.
</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="logicOperator" type="logicOperator_t" use="optional">
				<xs:annotation>
					<xs:documentation>One of the following enumerated types: 
AND, OR, XOR, NOT. Mutually exclusive with operator. Advanced logic operators are AND_ALSO and OR_ELSE which are equivilent to AND and OR but indicate short-circuit evaluation.
</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="id" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Optional identifier. Allows for re-use of this edit within stateRule or other startegyEdit elements.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="editRef" type="editRef_t"/>
	<xs:complexType name="editRef_t">
		<xs:attribute name="id" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:simpleType name="operator_t">
		<xs:restriction base="xs:string">
			<xs:enumeration value="EX"/>
			<xs:enumeration value="NX"/>
			<xs:enumeration value="EQ"/>
			<xs:enumeration value="NE"/>
			<xs:enumeration value="LE"/>
			<xs:enumeration value="LT"/>
			<xs:enumeration value="GE"/>
			<xs:enumeration value="GT"/>
			<!-- exists -->
			<!-- not exists -->
			<!-- equal -->
			<!-- not equal -->
			<!-- less than or equal -->
			<!-- less than -->
			<!-- greater than or equal -->
			<!-- greater than -->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="logicOperator_t">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AND"/>
			<xs:enumeration value="OR"/>
			<xs:enumeration value="XOR"/>
			<xs:enumeration value="NOT"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
<!-- Please email any revisions to the Steward of the Master Model & Mapping artifacts at algotech@fixprotocol.org -->
<!-- Revision History -->
<!-- Date Version Author Comments
Original Author - Greg Malatestinic with input from Rick Labs, Zoltan Feledy, Jim Arlet, et al
	-if there is anyone else then please speak up :-)
30jan08 v2.5 by Robert Golan for uris, revision history, and version stamping.
14May08 by Greg Malatestinic
			-changes to <edit> to support tree-like expression structure. Added field2 attribute. logicOperator and operator are mutually exclusive - one is required.
-->
